{"version":3,"sources":["ListItem.js","App.js","reportWebVitals.js","index.js"],"names":["ListItem","id","title","onEdit","onDelete","useState","edit","setEdit","textInput","useRef","onEditClick","current","focus","onAbortClick","onConfirmClick","value","className","defaultValue","ref","onClick","renderContent","App","elements","setElements","idCounter","setIdCounter","addInput","class","action","type","name","placeholder","e","preventDefault","newElements","slice","unshift","onAdd","map","element","newTitle","i","length","splice","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee631ff4.chunk.js","sourcesContent":["import { useRef, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nexport function ListItem({ id, title, onEdit, onDelete }) {\r\n    const [edit, setEdit] = useState(false);\r\n    const textInput = useRef(null);\r\n\r\n    const onEditClick = () => {\r\n        textInput.current.focus();\r\n        setEdit(true);\r\n    };\r\n    const onAbortClick = () => {\r\n        setEdit(false);\r\n    };\r\n    const onConfirmClick = () => {\r\n        if (textInput.current.value !== title) {\r\n            onEdit(id, textInput.current.value);\r\n        }\r\n        setEdit(false);\r\n    };\r\n    const renderContent = (edit) => {\r\n        if (!edit) {\r\n            return (\r\n                <>\r\n                    <span className=\"text\" ref={textInput}>\r\n                        {title}\r\n                    </span>\r\n                    <span className=\"bttn edit\" onClick={onEditClick}></span>\r\n                    <span className=\"bttn delete\" onClick={onDelete}></span>\r\n                </>\r\n            );\r\n        } else {\r\n            return (\r\n                <>\r\n                    <input\r\n                        className=\"text\"\r\n                        defaultValue={title}\r\n                        ref={textInput}\r\n                    />\r\n                    <span\r\n                        className=\"bttn confirm\"\r\n                        onClick={onConfirmClick}\r\n                    ></span>\r\n                    <span className=\"bttn abort\" onClick={onAbortClick}></span>\r\n                </>\r\n            );\r\n        }\r\n    };\r\n    return <li id={id}>{renderContent(edit)}</li>;\r\n}\r\n","import { useRef, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { ListItem } from \"./ListItem\";\r\n\r\nfunction App() {\r\n  const [elements, setElements] = useState([\r\n      { id: \"1\", title: \"title1\" },\r\n      { id: \"2\", title: \"title2\" },\r\n      { id: \"3\", title: \"title3\" },\r\n  ]);\r\n  const [idCounter, setIdCounter] = useState(0);\r\n  const addInput = useRef(null);\r\n\r\n  const onAdd = (title) => {\r\n      const newElements = elements.slice();\r\n      newElements.unshift({ id: idCounter, title: title });\r\n      setIdCounter(\"li-\" + (idCounter + 1));\r\n      setElements(newElements);\r\n  };\r\n  const onDelete = (id) => {\r\n      const newElements = elements.slice();\r\n      for (let i = 0; i < newElements.length; i++) {\r\n          if (newElements[i].id === id) {\r\n              newElements.splice(i, 1);\r\n          }\r\n      }\r\n      setElements(newElements);\r\n  };\r\n  const onEdit = (id, newTitle) => {\r\n      const newElements = elements.slice();\r\n      for (let i = 0; i < newElements.length; i++) {\r\n          if (newElements[i].id === id) {\r\n              newElements[i].title = newTitle;\r\n          }\r\n      }\r\n      setElements(newElements);\r\n  };\r\n  return (\r\n      <div class=\"main\">\r\n          <h1>\r\n              <span>NOT</span>\r\n              <span>todo</span>\r\n              <span>LIST</span>\r\n          </h1>\r\n          <ol id=\"instructions\">\r\n              <li>Write down things not to do.</li>\r\n              <li>\r\n                  If someone asks you to do said thing, just reply with: \"Sorry,\r\n                  but that's on my Not Todo List.\"\r\n              </li>\r\n              <li>\r\n                  If you successfully avoided doing said thing, cross it of your\r\n                  list.\r\n              </li>\r\n          </ol>\r\n          <form action=\"\">\r\n              <p>What are you NOT doing today:</p>\r\n              <div class=\"inputArea shadow\">\r\n                  <input\r\n                      type=\"text\"\r\n                      name=\"task\"\r\n                      id=\"task\"\r\n                      placeholder=\"your Task\"\r\n                      ref={addInput}\r\n                  />\r\n\r\n                  <button\r\n                      id=\"add\"\r\n                      onClick={(e) => {\r\n                          e.preventDefault();\r\n                          onAdd(addInput.current.value);\r\n                          addInput.current.value =  \"\";\r\n                      }}\r\n                  >\r\n                      Add\r\n                  </button>\r\n              </div>\r\n          </form>\r\n          <div>\r\n              <p>Things not to do:</p>\r\n              <ul id=\"task-list\">\r\n                  {elements.map((element) => (\r\n                      <ListItem\r\n                          key={element.id}\r\n                          id={element.id}\r\n                          title={element.title}\r\n                          onEdit={(id, title) => onEdit(id, title)}\r\n                          onDelete={() => {\r\n                              onDelete(element.id);\r\n                          }}\r\n                      />\r\n                  ))}\r\n              </ul>\r\n          </div>\r\n          <i class=\"license\">\r\n              icons by fontawesome -{\" \"}\r\n              <a href=\"https://fontawesome.com/license\">license</a>\r\n          </i>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}